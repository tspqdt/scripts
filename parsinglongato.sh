#!/usr/bin/env bash

#########################################################################
# Titulo        : Parsing_HTML_Bash                                     #
# Versao        : 1.0                                                   #
# Data          : 29.04.2023                                            #
#########################################################################

# =======================================================================================
# Constantes
# =======================================================================================
RED='\033[31;1m'
GREEN='\033[32;1m'
BLUE='\033[34;1m'
YELLOW='\033[33;1m'
END='\033[m'

# =======================================================================================
# Verificando Dependências
# =======================================================================================
[[ -e /usr/bin/wget ]] || printf "\nFaltando programa ${RED}wget{END} para funcionar.\n"
[[ -e /usr/bin/curl ]] || printf "\nFaltando programa ${RED}curl{END} para funcionar.\n"

# ======================================================================================
# Verificando Argumentos
# ======================================================================================
if [[ "$" == "" ]]; then
    echo
    echo -e "$
    {YELLOW}###########################################################################$
    {END}"
    echo -e "${YELLOW} | ->               PARSING HTML
<- | $ {END}"
    echo -e "${YELLOW} | ->Exemplo: $0 www.alvo.com.br                              <-|
{END}"
    echo
    exit 1
fi

# ======================================================================================
# Fazendo Download da Página
# ======================================================================================
wget $1 -q -O $1.html

# ======================================================================================
# Filtrando links
# ======================================================================================
grep "href" $1.html | cut -d "/" -f 3 | grep "\." | cut -d '"' -f 1 | grep -v "<1" | grep -v "www." | sort -u > $1.hosts

# ======================================================================================
# Mostrando Hosts Encontrados
# ======================================================================================
echo
echo -e "${YELLOW}##############################################################################${END}"
echo -e "${YELLOW} | ->                       BUSCANDO HOSTS                               <- | ${END}"
echo -e "${YELLOW}##############################################################################${END}"
echo

# Para cada HOST encontrado, checa o status code de retorno 
for i in $(cat "$1.hosts")
do
    status_code=$(curl -m 2 -o /dev/null -s -w "%{http_code}\n" $i)      # -m 2 == timeout (2 segundos)
    echo -e "$i [CODE : ${status_code}]"
done

# ======================================================================================
# Verificando hosts ativos
# ======================================================================================
echo
echo -e "${YELLOW}###############################################################################${END}"
echo -e "${YELLOW} | ->                       RESOLVENDO HOSTS                              <- | ${END}"
echo -e "${YELLOW}###############################################################################${END}"
echo

for h in $(cat "$1.hosts");do host $h;done | grep "has address" > $1.ip
cat $1.ip

# removendo arquivos temporarios
rm $1.hosts
rm $1.ip

exit 0